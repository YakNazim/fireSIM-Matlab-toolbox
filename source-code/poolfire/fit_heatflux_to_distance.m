function [fitresult, gof] = fit_heatflux_to_distance(R_1D, heat_flux_batch1D,plt)
%CREATEFIT(R_1D,HEAT_FLUX_BATCH1D)
%  Create a fit : heatflux = f (distance) ; 
%
%  Data for 'untitled fit 1' fit:
%      X Input : R_1D
%      Y Output: heat_flux_batch1D
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 03-Sep-2019 15:13:54


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( R_1D, heat_flux_batch1D );

% Set up fittype and options.
ft = fittype( 'exp1' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'off';
%opts.StartPoint = [122.502256174529 -0.0244251938489238 -84.8007216336983 -0.0287323583848648];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

%Plot fit with data.
if(plt ==1)
    
    figure( 'Name', 'Curve fitting of heatflux = f (distance)' );
    h = plot( fitresult, xData, yData );
    legend( h, 'heatflux vs. heatfdistancelux', 'fit  : heatflux = F(distance) ', 'Location', 'NorthEast' );
    title('Curve fitting of heatflux = f (distance) ') ;

    xlabel('distance [m]');
    ylabel('heatflux [kw/m2]');
    grid on

    dim = [0.2 0.5 0.3 0.3];
    str =  {formula(fitresult),coeffvalues(fitresult),'R^2 = ',gof.rsquare};
    annotation('textbox',dim,'String',str,'FitBoxToText','on');

end
